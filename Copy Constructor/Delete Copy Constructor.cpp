#include <iostream>
using namespace std;

class CTestData {
public:
	CTestData(int nParam) : m_nData(nParam) { cout << "CTestData(int)" << endl; }

	// 복사 생성자를 아예 삭제함으로써 복사 생성을 막는다
	CTestData(const CTestData& rhs) = delete;
	// 읽기 전용인 상수형 메서드
	int GetData() const { return m_nData; }

	// 멤버 변수에 쓰기를 시도하는 메서드
	void SetData(int nParam) { m_nData = nParam; }

private:
	int m_nData = 0;
};

void TestFunc(CTestData param) {
	cout << "TestFunc()" << endl;

	// 피호출자 함수에서 매개변수 인스턴스의 값을 변경한다.
	param.SetData(20);
}

int main() {
	cout << "**** Begin ****" << endl;

	// 사용자 코드에서 복사 생성이 불가능하다.
	CTestData a(10);
	TestFunc(a);

	// 함수 호출 후 a의 값을 출력한다.
	cout << "a : " << a.GetData() << endl;

	cout << "**** End ****" << endl;
	return 0;
}